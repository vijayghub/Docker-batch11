Install docker
---------------

1. windows - docker toolbox
2. Linux   - 

a) first process 

yum install epel-repository

yum install docker
   pre- epel

b) second process

install via script

https://get.docker.com/

curl -fsSL https://get.docker.com -o get-docker.sh

sh get-docker.sh

--------

docker
docker --version
docker info

--------- start docker ----

service docker status
service docker start

enable at BIOS level
--------------------
systemctl enable docker
------------------
----enable /force filewall to access any port---
----------------------------------------------



iptables -F

docker images
docker search images

docker search hello-world

docker pull hello-world

docker images

docker run <imagename>
docker run -itd <imagename>

docker ps

docker ps -a

docker start <container id>
docker stop <container id>

docker images

docker run -itd -p 80:80 tutum/hello-world

goto browser

ip of linux machin and hit enter

192.168.134.135:80


----------
class 2
-----------

docker images
docker pull centos
docker run -it centos
exit
docker rm contid 

docker run -it centos
CTRL+P+Q

docker run -itd centos

docker attach contId
exit
or

CTRL+P+q

docker start contid 
docker stop contid

docker rm contid
docker rm -f contid

---- install git and clone git repo ---

docker run -it centos
yum install git -y
git --version

git clone url

ctl+p+q

docker commit contid

docker ps


docker tag <image id> "vijay2018/batch11" (is docker hub repo)

docker images

docker run -it   vijay2018/batch11

docker ps

docker login

docker logout

docker push ImageId

ex: docker push vijay2018/batch11

----
docker tag imageid orgid/repo:tag

docker push imageid:tag

docker pull vijay2018/batch11:tag1

----------------
---------
class3
---------
- stopeed
docker rm cid

- force
docker rm -f cid

- only for running container to kill
docker kill cid

- list only running cid
docker ps -q

docker ps -aq

docker pause cid

docker unpause cid

- delete all containers which are not running status
docker rm $(docker ps -aq)

- delete all cid forcefully

docker rm -f $(docker ps -aq)

- delete images
docker rmi imagid/name

docker images -q

- delet all images 
docker rmi $(docker ps -aq)

- force if any containers using the image
docker rmi -f $(docker ps -aq)

docker exec -it 5c02aa653549 /bin/bash
exit
-even exit container up and running

- expose port
docker run -itd -p 81:80 nginx

start jenkins in docker
---------------------
docker pull jenkins

docker run -it -p 8084:8080 jenkins
- list all log
- also secret key

docker run -itd -p 8084:8080 jenkins

--give below to force port numbers to allow
-------------------------------------------
iptables -F

- quick
- wont list log detiasl
- no secret key

---> go to browser git 192.168.134.135:8084

login to continer and get secretekey

docker exec -it cid /bin/bash
ex: ex: docker exec -it 498de2191c48 /bin/bash

- go to path for secret key
cat /var/jenkins_home/secrets/initialAdminPassword


- enter pw and continue

- install suggested plugins

====================================================

=========
class4
-------
docker restart 498de2191c48

name the container
------------------
docker run --name mycentos -itd centos

1. Mounts
---------

docker run -itd /path/of/host:/conatiner/path Image name

docker run -itd -v /opt/batch11:/var/common/ centos

docker inspect cid

- create container from existing container and copy data
docker run -itd --volumes-from 6bdf98cb7870 centos

login to contaier
-----------------
docker exec -it 498de2191c48 /bin/bash

Note: pelase dont use docker attach cid command when container is 
  exposed to porting. like jenkins/tomcat

------------
class 5
-----------
2.volume
---------
docker volume

docker volume create vol1
docker volume ls

- create container for jenkins using volume vol1

docker run --name myjenkins1 -v vol1:/var/jenkins_home -p 

8055:8080 -p 50000:50000 -itd jenkins

---------------------------

dockerfile
----------

----------------------------------------
FROM centos
MAINTAINER vijay2018 <vijay2018@gmail.com>
RUN yum update -y
RUN yum install git -y
RUN echo "Hello welcome to devops" >> /opt/testfile1
RUN yum install java -y
RUN yum install wget -y
RUN mkdir /opt/mvn
RUN cd /opt/mvn && wget 

http://mirrors.estointernet.in/apache/maven/maven-

3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz
RUN cd /opt/mvn && tar -xvf /opt/mvn/apache-maven-3.6.2-

bin.tar.gz
RUN export M2_HOME=/opt/mvn/apache-maven-3.6.2
RUN export PATH=${M2_HOME}/bin:${PATH}

----------------------------------------
- provide instruction for creating image

- name should be always dockerfile

- build image

docker build -t "centos:base" .

- create container 

docker run -it centos:base

- check history of image
docker history centos

- check container logs
docker logs cid
ex:docker logs a34d07c7dbc6
